<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>cn.apidev</groupId>
    <artifactId>apidev</artifactId>
    <version>1.0</version>
  	<packaging>jar</packaging>
  	
    <name>apidev</name>

	<url>http://apidev.cn</url>
	 <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>apidev</id>
            <name>apidev</name>
            <email>qinhaisenlin1024@163.com</email>
            <roles>
                <role>Project Manager</role>
                <role>Architect</role>
            </roles>
        </developer>
    </developers>

	<scm>
        <connection>https://gitee.com/apidev/apidev.git</connection>
        <developerConnection>scm:git:ssh://git@gitee.com:apidev/apidev.git
        </developerConnection>
        <url>https://gitee.com/apidev/apidev</url>
    </scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<maven.compiler.source>1.8</maven.compiler.source>  
    	<maven.compiler.target>1.8</maven.compiler.target>  
	</properties>
	
	<!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>https://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- jfinal -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>5.2.3</version>
		</dependency>
		<!-- fastjson json 转换 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.80</version>
		</dependency>	
		<!-- druid 数据源连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.29</version>
		</dependency>		
	    <!-- springboot 依赖-->
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot</artifactId>
		    <version>2.1.15.RELEASE</version>
		</dependency> 
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <version>2.1.15.RELEASE</version>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>apidev</finalName>		
		<!--
		    添加 includes 配置后，excludes 默认为所有文件 **/*.*，反之亦然
		    该规则在 maven-jar-plugin 等插件中同样适用
		-->
		<resources>
			<!-- 添加该配置是为了将 .sql 文件打入 jar 包 -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.class</include>
				</includes>
			</resource>
			
			<!--
				没有添加 resources 配置时，src/main/resources 目录是默认配置
			    一旦添加 resources 配置指向 src/main/java 目录时，原先的默认配置被取代，
			    所以需要添加如下配置将默认配置再添加进来，否则无法使用 src/main/resources
			    下的资源文件
			-->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			
		</resources>
		
		
		
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments><verbose /></compilerArguments>
				</configuration>
			</plugin>
			
			<!--   central发布插件    -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.4.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>masiyi</publishingServerId>
                    <tokenAuth>true</tokenAuth>
                </configuration>
            </plugin>
            <!--   source源码插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--   javadoc插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <executable>C:\Program Files (x86)\GnuPG\bin\gpg.exe</executable>
                    <keyname>apidev</keyname>
                </configuration>
                <executions>
                    <execution>
                        <id>apidev</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			
		</plugins>
	</build>
</project>