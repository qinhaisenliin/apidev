<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>cn.apidev</groupId>
    <artifactId>apidev</artifactId>
    <version>1.0</version>
  	<packaging>jar</packaging>
  	
    <name>apidev</name>

	<url>http://apidev.cn</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<maven.compiler.source>1.8</maven.compiler.source>  
    	<maven.compiler.target>1.8</maven.compiler.target>  
	</properties>
	
	<!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>https://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- jfinal -->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>5.2.3</version>
		</dependency>
		<!-- fastjson json 转换 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.80</version>
		</dependency>	
		<!-- druid 数据源连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.29</version>
		</dependency>		
	    <!-- springboot 依赖-->
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot</artifactId>
		    <version>2.1.15.RELEASE</version>
		</dependency> 
        <dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web</artifactId>
		    <version>2.1.15.RELEASE</version>
		</dependency>
	</dependencies>
	
	<build>
		<finalName>apidev</finalName>		
		<!--
		    添加 includes 配置后，excludes 默认为所有文件 **/*.*，反之亦然
		    该规则在 maven-jar-plugin 等插件中同样适用
		-->
		<resources>
			<!-- 添加该配置是为了将 .sql 文件打入 jar 包 -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.class</include>
				</includes>
			</resource>
			
			<!--
				没有添加 resources 配置时，src/main/resources 目录是默认配置
			    一旦添加 resources 配置指向 src/main/java 目录时，原先的默认配置被取代，
			    所以需要添加如下配置将默认配置再添加进来，否则无法使用 src/main/resources
			    下的资源文件
			-->
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			
		</resources>
		
		
		
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments><verbose /></compilerArguments>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<finalName>apidev</finalName>
							<transformers>
							<!--
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>cn.apidev.App</mainClass>
								</transformer>
								-->
								<!--
									下面的配置支持排除指定文件打包到 jar 之中，可以用于排除需要修改的配置文件以便于在外部的 config 目录下的
									同名配置文件生效，建议使用 Prop.appendIfExists(xxx_pro.txt) 在外部放一个非同名配置来覆盖开发环境的配置
									则可以不用使用下面的配置，文档参考:
										http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html#DontIncludeResourceTransformer
								-->
								<transformer implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
									<resources>
									<!-- <resource>demo-config-dev.txt</resource> -->
									<!-- <resource>.PDF</resource> -->
									<!-- <resource>READ.md</resource> -->
									</resources>
								</transformer>
							</transformers>
							
							<!-- 
								解决 fatjar 的 "java.lang.SecurityException: Invalid signature file digest
								for Manifest main attributes" 问题
							-->
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
</project>